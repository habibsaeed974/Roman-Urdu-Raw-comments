{"cells":[{"cell_type":"code","execution_count":null,"id":"a808095a-eb20-49e5-8114-08d0b85f8479","metadata":{"id":"a808095a-eb20-49e5-8114-08d0b85f8479"},"outputs":[],"source":["import re\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"id":"6dd68c82-79a4-441b-8a84-06630534ad1f","metadata":{"editable":true,"tags":[],"colab":{"base_uri":"https://localhost:8080/","height":619},"id":"6dd68c82-79a4-441b-8a84-06630534ad1f","executionInfo":{"status":"error","timestamp":1745375152332,"user_tz":-300,"elapsed":265,"user":{"displayName":"Habib Saeed","userId":"05827922064648381793"}},"outputId":"6580e607-a2c5-49a6-e260-3981125860a9"},"outputs":[{"output_type":"error","ename":"ValueError","evalue":"Excel file format cannot be determined, you must specify an engine manually.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-60f8c3430aed>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_excel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mr\"https://docs.google.com/spreadsheets/d/1y9m8ssjuAVTuQxnNZieVGBk3qFqxJ46Z/edit?usp=drivesdk&ouid=106814423959975701361&rtpof=true&sd=true\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/excel/_base.py\u001b[0m in \u001b[0;36mread_excel\u001b[0;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)\u001b[0m\n\u001b[1;32m    493\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mExcelFile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    494\u001b[0m         \u001b[0mshould_close\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 495\u001b[0;31m         io = ExcelFile(\n\u001b[0m\u001b[1;32m    496\u001b[0m             \u001b[0mio\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    497\u001b[0m             \u001b[0mstorage_options\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstorage_options\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/excel/_base.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)\u001b[0m\n\u001b[1;32m   1552\u001b[0m                 )\n\u001b[1;32m   1553\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mext\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1554\u001b[0;31m                     raise ValueError(\n\u001b[0m\u001b[1;32m   1555\u001b[0m                         \u001b[0;34m\"Excel file format cannot be determined, you must specify \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1556\u001b[0m                         \u001b[0;34m\"an engine manually.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Excel file format cannot be determined, you must specify an engine manually."]}],"source":["df = pd.read_ex itcel(r\"https://docs.google.com/spreadsheets/d/1y9m8ssjuAVTuQxnNZieVGBk3qFqxJ46Z/edit?usp=drivesdk&ouid=106814423959975701361&rtpof=true&sd=true\")"]},{"cell_type":"code","execution_count":null,"id":"cb04dbe5-1260-4390-8048-1ae190874c1f","metadata":{"id":"cb04dbe5-1260-4390-8048-1ae190874c1f","outputId":"28cc8cf7-69fd-4c05-ea4f-31469694b15e"},"outputs":[{"name":"stdout","output_type":"stream","text":["(3782, 2)\n"]}],"source":["print(df.shape)"]},{"cell_type":"code","execution_count":null,"id":"4ff28a23-f0ae-4b1d-8a32-e7e683543ccd","metadata":{"scrolled":true,"id":"4ff28a23-f0ae-4b1d-8a32-e7e683543ccd","outputId":"bd835d56-b5d8-483d-f12e-4c7cc11ed778"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Comments</th>\n","      <th>Labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>bhai hum sab kaafir hai</td>\n","      <td>Hate Speech</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ayesha means randi in urdu</td>\n","      <td>Hate Speech</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>bharwe masjid mae hoon mae</td>\n","      <td>Hate Speech</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>bhenchod apni aadat dal kar kahty hain you de...</td>\n","      <td>Hate Speech</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>birthday wali feel hi nai arahi bhenchod</td>\n","      <td>Hate Speech</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>google randi please privacy wapas dede please...</td>\n","      <td>Hate Speech</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>ios bhenchod my twitter is hanging so much yuck</td>\n","      <td>Hate Speech</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                            Comments       Labels\n","0                           bhai hum sab kaafir hai   Hate Speech\n","1                         ayesha means randi in urdu  Hate Speech\n","2                         bharwe masjid mae hoon mae  Hate Speech\n","3   bhenchod apni aadat dal kar kahty hain you de...  Hate Speech\n","4           birthday wali feel hi nai arahi bhenchod  Hate Speech\n","5   google randi please privacy wapas dede please...  Hate Speech\n","6    ios bhenchod my twitter is hanging so much yuck  Hate Speech"]},"execution_count":348,"metadata":{},"output_type":"execute_result"}],"source":["df.head(7)"]},{"cell_type":"code","execution_count":null,"id":"b8b3847c-18af-4497-af91-687c8ec85bed","metadata":{"id":"b8b3847c-18af-4497-af91-687c8ec85bed","outputId":"263c98ac-890f-4297-9310-eeea9ae5a218"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Comments</th>\n","      <th>Labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3779</th>\n","      <td>Yeh bohot assa dekhaya or aap la jobab</td>\n","      <td>Non Hate Speech</td>\n","    </tr>\n","    <tr>\n","      <th>3780</th>\n","      <td>ZABARDAST ANALYSIS WELL BALANCED BROTHER FAISAL</td>\n","      <td>Non Hate Speech</td>\n","    </tr>\n","    <tr>\n","      <th>3781</th>\n","      <td>Zabardast video ️</td>\n","      <td>Non Hate Speech</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                             Comments           Labels\n","3779           Yeh bohot assa dekhaya or aap la jobab  Non Hate Speech\n","3780  ZABARDAST ANALYSIS WELL BALANCED BROTHER FAISAL  Non Hate Speech\n","3781                                Zabardast video ️  Non Hate Speech"]},"execution_count":350,"metadata":{},"output_type":"execute_result"}],"source":["df.tail(3)"]},{"cell_type":"code","execution_count":null,"id":"51ede0e5-3f76-46d8-bb49-6f36cc8b00be","metadata":{"id":"51ede0e5-3f76-46d8-bb49-6f36cc8b00be","outputId":"65848c34-59a3-43d3-d3e6-e840734c512c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Comments    0\n","Labels      0\n","dtype: int64\n"]}],"source":["print (df.isnull().sum())"]},{"cell_type":"code","execution_count":null,"id":"2d6e898c-dccc-4966-b480-b7937db8df15","metadata":{"id":"2d6e898c-dccc-4966-b480-b7937db8df15","colab":{"base_uri":"https://localhost:8080/","height":332},"executionInfo":{"status":"error","timestamp":1745375888225,"user_tz":-300,"elapsed":204,"user":{"displayName":"Habib Saeed","userId":"05827922064648381793"}},"outputId":"c045a34f-05f8-4b94-cded-334c67c83ae3"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-1ac174be4d67>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}],"source":["df = df.dropna()"]},{"cell_type":"code","execution_count":null,"id":"9eb31406-4e9c-48aa-8927-4fb7973b1d68","metadata":{"id":"9eb31406-4e9c-48aa-8927-4fb7973b1d68","colab":{"base_uri":"https://localhost:8080/","height":364},"executionInfo":{"status":"error","timestamp":1745376042640,"user_tz":-300,"elapsed":88,"user":{"displayName":"Habib Saeed","userId":"05827922064648381793"}},"outputId":"8fcca82d-c6f2-4890-dc63-0892171aca42"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-ff161b09d297>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Comments\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Comments\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstrip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}],"source":["df[\"Comments\"] = df[\"Comments\"].str.strip()"]},{"cell_type":"code","execution_count":null,"id":"f8cc00c3-6bc0-43b7-b893-0c62fa0f3a6f","metadata":{"id":"f8cc00c3-6bc0-43b7-b893-0c62fa0f3a6f","outputId":"42439224-7609-42af-ed72-c1c3190185fe"},"outputs":[{"name":"stdout","output_type":"stream","text":["Comments    0\n","Labels      0\n","dtype: int64\n"]}],"source":["print(df.isnull().sum())"]},{"cell_type":"code","execution_count":null,"id":"bf5ce64f-0a88-49f0-a32c-d6752005eb0b","metadata":{"id":"bf5ce64f-0a88-49f0-a32c-d6752005eb0b","outputId":"0c7e4084-3bb3-4480-ffb4-0f5419b526be","colab":{"base_uri":"https://localhost:8080/","height":332},"executionInfo":{"status":"error","timestamp":1745375581745,"user_tz":-300,"elapsed":56,"user":{"displayName":"Habib Saeed","userId":"05827922064648381793"}}},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-79229280992c>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m \u001b[0mduplicated\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}],"source":["df. duplicated().sum()"]},{"cell_type":"code","execution_count":null,"id":"d9f0c50e-b481-4ecb-a7fc-36760bc787d7","metadata":{"id":"d9f0c50e-b481-4ecb-a7fc-36760bc787d7","outputId":"34b733af-7a1f-4034-9a84-0b696b6e83e3"},"outputs":[{"name":"stdout","output_type":"stream","text":["                  Comments           Labels\n","22     2;41 gajab bezti ha      Hate Speech\n","174                 Behaya      Hate Speech\n","176                 Behaya      Hate Speech\n","201               Besharam      Hate Speech\n","312                 Cringe      Hate Speech\n","...                    ...              ...\n","3169     Pakistan zindabad  Non Hate Speech\n","3170     Pakistan zindabad  Non Hate Speech\n","3171     Pakistan zindabad  Non Hate Speech\n","3172     Pakistan Zindabad  Non Hate Speech\n","3185  Pakistan Zindabad 🇵🇰  Non Hate Speech\n","\n","[70 rows x 2 columns]\n"]}],"source":["duplicates  = df[df.duplicated()]\n","print(duplicates)"]},{"cell_type":"code","execution_count":null,"id":"a46ed2ba-39f8-425a-b3fc-47466bdbd2eb","metadata":{"id":"a46ed2ba-39f8-425a-b3fc-47466bdbd2eb","colab":{"base_uri":"https://localhost:8080/","height":364},"executionInfo":{"status":"error","timestamp":1745409408976,"user_tz":-300,"elapsed":149,"user":{"displayName":"Habib Saeed","userId":"05827922064648381793"}},"outputId":"80ebdc07-fa66-4085-b918-b8c9cbccff8d"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-80c7f9f05aff>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop_duplicates\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeep\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"first\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}],"source":["df.drop_duplicates(keep = \"first\", inplace = True)"]},{"cell_type":"code","execution_count":null,"id":"0b7cab6a-1951-4549-9e94-dccca9c1fed0","metadata":{"id":"0b7cab6a-1951-4549-9e94-dccca9c1fed0","outputId":"44e801fa-1bae-4e04-8ee1-95acae1ac977"},"outputs":[{"data":{"text/plain":["0"]},"execution_count":366,"metadata":{},"output_type":"execute_result"}],"source":["df.duplicated().sum()"]},{"cell_type":"code","execution_count":null,"id":"ad242628-8dfb-48c3-abf1-31e66c30ff8f","metadata":{"id":"ad242628-8dfb-48c3-abf1-31e66c30ff8f","outputId":"199a0dde-9ae7-42ae-f2f6-893f8aad9355"},"outputs":[{"name":"stdout","output_type":"stream","text":["(3712, 2)\n"]}],"source":["print(df.shape)\n","# df.head(7)"]},{"cell_type":"code","execution_count":null,"id":"d5e6c16d-5fb0-4fca-87e5-0f4a8aa6cb76","metadata":{"id":"d5e6c16d-5fb0-4fca-87e5-0f4a8aa6cb76","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745409579723,"user_tz":-300,"elapsed":3934,"user":{"displayName":"Habib Saeed","userId":"05827922064648381793"}},"outputId":"2e2de982-1f30-4748-cc39-6b1631b952ac"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting emoji\n","  Downloading emoji-2.14.1-py3-none-any.whl.metadata (5.7 kB)\n","Downloading emoji-2.14.1-py3-none-any.whl (590 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m590.6/590.6 kB\u001b[0m \u001b[31m8.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: emoji\n","Successfully installed emoji-2.14.1\n"]}],"source":["!pip install emoji"]},{"cell_type":"code","execution_count":null,"id":"171c523e-f69a-4678-8719-c0762f3ed010","metadata":{"id":"171c523e-f69a-4678-8719-c0762f3ed010"},"outputs":[],"source":["import emoji\n","# print(emoji.__version__)"]},{"cell_type":"code","execution_count":null,"id":"aef9d84d-34b4-4a0c-a42c-57dbb418e563","metadata":{"id":"aef9d84d-34b4-4a0c-a42c-57dbb418e563"},"outputs":[],"source":["def remove_emojis (comment):\n","    return emoji.replace_emoji(comment, replace = \"\")"]},{"cell_type":"code","execution_count":null,"id":"b9f423fa-f897-4b1a-954f-58532635583e","metadata":{"id":"b9f423fa-f897-4b1a-954f-58532635583e","colab":{"base_uri":"https://localhost:8080/","height":332},"executionInfo":{"status":"error","timestamp":1745410709602,"user_tz":-300,"elapsed":73,"user":{"displayName":"Habib Saeed","userId":"05827922064648381793"}},"outputId":"ac4813b7-d02d-4d3f-f09d-3576ffdfc104"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-33082bbb5bb9>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdff\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#Retaining copy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}],"source":["dff = df.copy() #Retaining copy"]},{"cell_type":"code","execution_count":null,"id":"f83ccd30-6eec-4107-8169-5c5932fcbcdd","metadata":{"id":"f83ccd30-6eec-4107-8169-5c5932fcbcdd"},"outputs":[],"source":["dff[\"Comments\"]= dff[\"Comments\"].apply(remove_emojis)"]},{"cell_type":"code","execution_count":null,"id":"a96ce4cb-f6b3-4ea5-a34a-f11d7c8c7eaa","metadata":{"id":"a96ce4cb-f6b3-4ea5-a34a-f11d7c8c7eaa"},"outputs":[],"source":["#Due to emoji removal some comments become blannk and some duplicate created due to same text other then emoji."]},{"cell_type":"code","execution_count":null,"id":"859920bc-8614-4a93-a006-80836764485b","metadata":{"id":"859920bc-8614-4a93-a006-80836764485b"},"outputs":[],"source":["# dff.head(100)"]},{"cell_type":"code","execution_count":null,"id":"fa1605ee-3d33-4221-86b9-9a911efd1c07","metadata":{"id":"fa1605ee-3d33-4221-86b9-9a911efd1c07","colab":{"base_uri":"https://localhost:8080/","height":462},"executionInfo":{"status":"error","timestamp":1745410868041,"user_tz":-300,"elapsed":110,"user":{"displayName":"Habib Saeed","userId":"05827922064648381793"}},"outputId":"37546180-da65-45a8-e025-bc3b6cd8a28e"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'dff' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-6cbe819934f5>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdff\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#syncronizing my both copies so that I can use alternative I some function fails\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;31m# dff = df.copy() # only for backup\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'dff' is not defined"]}],"source":["df = dff.copy() #syncronizing my both copies so that I can use alternative I some function fails\n","# dff = df.copy() # only for backup"]},{"cell_type":"code","execution_count":null,"id":"8c46c8ba-a18b-4606-a0c3-ef9deaccb206","metadata":{"id":"8c46c8ba-a18b-4606-a0c3-ef9deaccb206"},"outputs":[],"source":["def remove_links (comments):\n","    return re.sub(r'http\\S+|www\\S+', '', comments)"]},{"cell_type":"code","execution_count":null,"id":"2b039a95-14e7-4b97-8d02-ff547ac02bb5","metadata":{"id":"2b039a95-14e7-4b97-8d02-ff547ac02bb5"},"outputs":[],"source":["dff [\"Comments\"] = dff[\"Comments\"].apply(remove_links).astype(str)\n","# dff.head(100)"]},{"cell_type":"code","execution_count":null,"id":"cbd5c30a-89f7-4ca2-af48-ed54b75078c8","metadata":{"id":"cbd5c30a-89f7-4ca2-af48-ed54b75078c8"},"outputs":[],"source":["def remove_special_characters (comments):\n","    return re.sub(r'[^a-zA-Z0-9]','', comment3)"]},{"cell_type":"code","execution_count":null,"id":"a08ffddf-70f5-46ec-8d7f-663f61b40fc5","metadata":{"id":"a08ffddf-70f5-46ec-8d7f-663f61b40fc5"},"outputs":[],"source":["dff [\"Comments\"] = dff[\"Comments\"].apply (remove_special_characters)\n","# print(df.shape)\n","# print(dff.shape)\n","# dff.head()"]},{"cell_type":"code","execution_count":null,"id":"1636e55a-4d86-476d-93e7-c253db56b761","metadata":{"id":"1636e55a-4d86-476d-93e7-c253db56b761"},"outputs":[],"source":["def remove_extra_spaces (comments):\n","    return re.sub(r'\\s+',' ', comments).strip()"]},{"cell_type":"code","execution_count":null,"id":"5b4ece98-b3b4-4c14-8d24-de00e45768b9","metadata":{"id":"5b4ece98-b3b4-4c14-8d24-de00e45768b9"},"outputs":[],"source":["dff [\"Comments\"] = dff[\"Comments\"].apply (remove_extra_spaces)\n","# dff.head(100)"]},{"cell_type":"code","execution_count":null,"id":"fc793008-768b-47e1-aad6-38927e775371","metadata":{"id":"fc793008-768b-47e1-aad6-38927e775371"},"outputs":[],"source":["roman_urdu_stopwords = [\"main\", \"tu\", \"tum\", \"hy\", \"eik\", \"aap\", \"wo\",\"ho\", \"hon\", \"ha\", \"you\", \"she\", \"he\", \"my\",\n","                        \"ye\", \"woh\", \"hai\", \"hain\", \"tha\", \"thee\", \"thay\",\"ek\", \"do\", \"teen\", \"or\", \"aur\", \"ya\",\n","                        \"jo\", \"jese\", \"jis\", \"se\", \"tak\", \"par\", \"ke\",\"ki\", \"ka\", \"kuch\", \"koi\", \"sab\", \"bhi\", \"hi\",\n","                        \"sirf\", \"agar\", \"lekin\", \"magar\"\n","]"]},{"cell_type":"code","execution_count":null,"id":"06181a44-8c17-47f5-bc93-318a5d0a15a3","metadata":{"id":"06181a44-8c17-47f5-bc93-318a5d0a15a3"},"outputs":[],"source":["def remove_stopwords(text):\n","    if isinstance(text, str):\n","        words = text.split()\n","        filtered_words = [word for word in words if word.lower() not in roman_urdu_stopwords]\n","        return \" \".join(filtered_words)\n","    return text"]},{"cell_type":"code","execution_count":2,"id":"89a47cff-4fcc-4587-b971-cfe217a7fcdc","metadata":{"id":"89a47cff-4fcc-4587-b971-cfe217a7fcdc","colab":{"base_uri":"https://localhost:8080/","height":482},"executionInfo":{"status":"error","timestamp":1745464411381,"user_tz":-300,"elapsed":176,"user":{"displayName":"Habib Saeed","userId":"05827922064648381793"}},"outputId":"39cbf205-1b7e-4480-8ac8-02a0ecb07806"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'dff' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-95ce308cf0bb>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdff\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Comments'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdff\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Comments'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mremove_stopwords\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'dff' is not defined"]}],"source":["dff['Comments'] = dff['Comments'].apply(remove_stopwords)"]},{"cell_type":"code","execution_count":null,"id":"8dc81784-965b-4183-9d5c-e6ad8b934112","metadata":{"id":"8dc81784-965b-4183-9d5c-e6ad8b934112"},"outputs":[],"source":["# Due to above all removals duplication and missing values created so repeating process to remove duplicate and missing values."]},{"cell_type":"code","execution_count":null,"id":"d4bdd891-87d9-406f-9b82-29790069efaf","metadata":{"id":"d4bdd891-87d9-406f-9b82-29790069efaf"},"outputs":[],"source":["# print(dff.isnull().sum())"]},{"cell_type":"code","execution_count":null,"id":"6114a818-41d7-4566-86a2-86299884f81a","metadata":{"id":"6114a818-41d7-4566-86a2-86299884f81a"},"outputs":[],"source":["# dff.drop_duplicates(keep = \"first\", inplace = True)"]},{"cell_type":"code","execution_count":null,"id":"1c5353b7-1430-4011-9d5e-4d53e05b586f","metadata":{"id":"1c5353b7-1430-4011-9d5e-4d53e05b586f"},"outputs":[],"source":["dff[\"Comments\"] = dff[\"Comments\"].str.strip()\n","dff[\"Comments\"] = dff[\"Comments\"].str.lower()\n","# print(dff.shape)\n","dff.dropna(inplace = True)\n","dff.drop_duplicates(inplace = True)"]},{"cell_type":"code","execution_count":null,"id":"e745d5b6-c739-479b-8100-515271505ca0","metadata":{"id":"e745d5b6-c739-479b-8100-515271505ca0","outputId":"2f2d2043-c3a0-44cd-a93c-d731bedae2f2"},"outputs":[{"name":"stdout","output_type":"stream","text":["(3608, 2)\n"]}],"source":["print(dff.shape)"]},{"cell_type":"code","execution_count":null,"id":"eacd1a7b-6781-4285-ba9a-11fda745ba26","metadata":{"id":"eacd1a7b-6781-4285-ba9a-11fda745ba26"},"outputs":[],"source":["dff.to_excel(\"My Cleaned comments.xlsx\")"]},{"cell_type":"code","execution_count":null,"id":"dbb50797-95ec-4a7f-9152-60edbe55b4aa","metadata":{"id":"dbb50797-95ec-4a7f-9152-60edbe55b4aa"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"id":"aa9cdff0-f12f-406b-bc6d-a09b9fd10b6b","metadata":{"id":"aa9cdff0-f12f-406b-bc6d-a09b9fd10b6b"},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python [conda env:base] *","language":"python","name":"conda-base-py"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.7"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}